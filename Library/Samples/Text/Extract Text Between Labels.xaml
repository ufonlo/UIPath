<Activity mc:Ignorable="sap sap2010 sads" x:Class="Extract_Text_Between_Labels" mva:VisualBasic.Settings="{x:Null}"
          sap2010:WorkflowViewState.IdRef="Extract_Text_Between_Labels_1"
          xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
          xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
          xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
          xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
          xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
          xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
          xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System"
          xmlns:ui="http://schemas.uipath.com/workflow/activities"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <TextExpression.NamespacesForImplementation>
        <sco:Collection x:TypeArguments="x:String">
            <x:String>System.Activities.XamlIntegration</x:String>
            <x:String>System.Activities.Validation</x:String>
            <x:String>System.Activities</x:String>
            <x:String>System.Activities.Statements</x:String>
            <x:String>System.Activities.Expressions</x:String>
            <x:String>Microsoft.VisualBasic</x:String>
            <x:String>Microsoft.VisualBasic.Activities</x:String>
            <x:String>System</x:String>
            <x:String>System.Collections.Generic</x:String>
            <x:String>System.Data</x:String>
            <x:String>System.Diagnostics</x:String>
            <x:String>System.IO</x:String>
            <x:String>System.Linq</x:String>
            <x:String>System.Management.Automation</x:String>
            <x:String>System.Net.Mail</x:String>
            <x:String>System.Xml</x:String>
            <x:String>System.Xml.Linq</x:String>
            <x:String>System.Windows.Markup</x:String>
        </sco:Collection>
    </TextExpression.NamespacesForImplementation>
    <TextExpression.ReferencesForImplementation>
        <sco:Collection x:TypeArguments="AssemblyReference">
            <AssemblyReference>System.Activities</AssemblyReference>
            <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
            <AssemblyReference>mscorlib</AssemblyReference>
            <AssemblyReference>System.Data</AssemblyReference>
            <AssemblyReference>System</AssemblyReference>
            <AssemblyReference>System.Core</AssemblyReference>
            <AssemblyReference>System.Management.Automation</AssemblyReference>
            <AssemblyReference>System.Xml</AssemblyReference>
            <AssemblyReference>System.Xml.Linq</AssemblyReference>
            <AssemblyReference>System.Xaml</AssemblyReference>
            <AssemblyReference>WindowsBase</AssemblyReference>
            <AssemblyReference>PresentationCore</AssemblyReference>
            <AssemblyReference>PresentationFramework</AssemblyReference>
            <AssemblyReference>System.ServiceModel</AssemblyReference>
        </sco:Collection>
    </TextExpression.ReferencesForImplementation>
    <Sequence DisplayName="Extract Text Between Labels" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="inputString" />
            <Variable x:TypeArguments="x:String" Name="labelBefore" />
            <Variable x:TypeArguments="x:String" Name="labelAfter" />
            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchValue" />
        </Sequence.Variables>
        <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1"
                    Text="This is a example of how to extract a text between two given labels using a regular expression patern&#xA;&#xA;Read more about regular expressions here:&#xA;http://msdn.microsoft.com/en-us/library/az24scfc%28v=vs.110%29.aspx&#xA;" />
        <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
                <OutArgument x:TypeArguments="x:String">[inputString]</OutArgument>
            </Assign.To>
            <Assign.Value>
                <InArgument x:TypeArguments="x:String">In computer programming, a string is traditionally a sequence of characters</InArgument>
            </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
                <OutArgument x:TypeArguments="x:String">[labelBefore]</OutArgument>
            </Assign.To>
            <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">computer </InArgument>
            </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
                <OutArgument x:TypeArguments="x:String">[labelAfter]</OutArgument>
            </Assign.To>
            <Assign.Value>
                <InArgument x:TypeArguments="x:String">a sequence</InArgument>
            </Assign.Value>
        </Assign>
        <ui:Matches DisplayName="Matches - Extract text between two labels" sap2010:WorkflowViewState.IdRef="Matches_1"
                    Input="[inputString]"
                    Pattern="[&quot;(?&lt;=&quot; + labelBefore + &quot;)(.*?)(?=&quot; + labelAfter + &quot;)&quot;]"
                    RegexOption="IgnoreCase, Compiled" Result="[matchValue]" />
        <If Condition="[(matchValue is Nothing) Or (matchvalue.Count = 0)]" DisplayName="If no match was found"
            sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
                <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_1"
                           Text="No match was found" />
            </If.Then>
            <If.Else>
                <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_2"
                           Text="[matchValue(0).Value]" />
            </If.Else>
        </If>
        <sads:DebugSymbol.Symbol>dzZGOlxUZW1wbGF0ZXMgLSByZWRvbmVcRXh0cmFjdCBUZXh0IEJldHdlZW4gTGFiZWxzLnhhbWwUNQNfDgIBATwFPKwCAgEcPQVEDgIBGEUFTA4CARRNBVQOAgEQVQVVqQICAQhWBV0KAgECQjBCewIBGz8xPz4CARlHMUc+AgEVUjBSOgIBE08xTz0CARFVe1WKAQIBDlWYAlWmAgIBDFWTAVXtAQIBCVYTVkgCAQNYCVh3AgEGWwlbegIBBFhgWHQCAQdbYFt3AgEF</sads:DebugSymbol.Symbol>
    </Sequence>
    <sap2010:WorkflowViewState.ViewStateManager>
        <sap2010:ViewStateManager>
            <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="464,170" />
            <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="464,60" />
            <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="464,60" />
            <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="464,60" />
            <sap2010:ViewStateData Id="Matches_1" sap:VirtualizedContainerService.HintSize="464,22" />
            <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="211,61" />
            <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="211,61" />
            <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,209" />
            <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="486,905">
                <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
            </sap2010:ViewStateData>
            <sap2010:ViewStateData Id="Extract_Text_Between_Labels_1"
                                   sap:VirtualizedContainerService.HintSize="526,1025" />
        </sap2010:ViewStateManager>
    </sap2010:WorkflowViewState.ViewStateManager>
</Activity>